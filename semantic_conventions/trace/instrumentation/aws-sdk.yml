groups:
  - id: aws
    prefix: aws
    brief: >
      The `awssdk` conventions apply to operations using the AWS SDK. They map request or response parameters
      in AWS SDK API calls to attributes on a Span. The conventions have been collected over time based
      on feedback from AWS users of tracing and will continue to increase as new interesting conventions
      are found.

      Some descriptions are also provided for populating OpenTelemetry semantic conventions.
    attributes:
      - id: service
        type: string
        brief: "The name of the service to which a request is made, as returned by the AWS SDK."
        examples:
          - DynamoDB
          - S3
      - id: operation
        type: string
        brief: "The name of the operation corresponding to the request, as returned by the AWS SDK"
        examples:
          - GetItem
          - PutItem

  - id: dynamodb.shared
    prefix: aws
    brief: "Attributes that exist for multiple DynamoDB request types."
    attributes:
      - id: table_names
        type: string[]
        brief: The keys in the `RequestItems` object field in a request operating on multiple tables.
        examples:
          - Users
          - Cats
      - id: consumed_capacity
        type: string[]
        brief: "The JSON-serialized value of each item in the `ConsumedCapacity` response field."
        examples:
          - '{
              "CapacityUnits": number,
              "GlobalSecondaryIndexes": {
                 "string" : {
                    "CapacityUnits": number,
                    "ReadCapacityUnits": number,
                    "WriteCapacityUnits": number
                 }
              },
              "LocalSecondaryIndexes": {
                 "string" : {
                    "CapacityUnits": number,
                    "ReadCapacityUnits": number,
                    "WriteCapacityUnits": number
                 }
              },
              "ReadCapacityUnits": number,
              "Table": {
                 "CapacityUnits": number,
                 "ReadCapacityUnits": number,
                 "WriteCapacityUnits": number
              },
              "TableName": "string",
              "WriteCapacityUnits": number
            }'
      - id: item_collection_metrics
        type: string
        brief: "The JSON-serialized value of the `ItemCollectionmetrics` response field."
        examples:
          - '{
              "string" : [
                 {
                    "ItemCollectionKey": {
                       "string" : {
                          "B": blob,
                          "BOOL": boolean,
                          "BS": [ blob ],
                          "L": [
                             "AttributeValue"
                          ],
                          "M": {
                             "string" : "AttributeValue"
                          },
                          "N": "string",
                          "NS": [ "string" ],
                          "NULL": boolean,
                          "S": "string",
                          "SS": [ "string" ]
                       }
                    },
                    "SizeEstimateRangeGB": [ number ]
                 }
              ]
             }'
      - id: provisioned_throughput.read_capacity_units
        type: number
        brief: "The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter."
        examples:
          - 1
          - 2
      - id: provisioned_throughput.write_capacity_units
        type: number
        brief: "The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter."
        examples:
          - 1
          - 2
      - id: consistent_read
        type: boolean
        brief: "The value of the `ConsistentRead` request parameter."
      - id: projection_expression
        type: string
        brief: "The value of the `ProjectionExpression` request parameter."
        examples:
          - Title
          - Title, Price, Color
          - Title, Description, RelatedItems, ProductReviews
      - id: limit
        type: number
        brief: "The value of the `Limit` request parameter."
        examples:
          - 10
      - id: attributes_to_get
        type: string[]
        brief: "The value of the `AttributesToGet` request parameter."
        examples:
          - lives
          - id
      - id: index_name
        type: string
        brief: "The value of the `IndexName` request parameter."
        examples:
          - name_to_group
      - id: select
        type: string
        brief: "The value of the `Select` request parameter."
        examples:
          - ALL_ATTRIBUTES
          - COUNT

  - id: dynamodb.batchgetitem
    brief: DynamoDB.BatchGetItem
    prefix: aws
    constraints:
      - any_of:
        - [aws.table_names, aws.consumed_capacity]

  - id: dynamodb.batchwriteitem
    brief: DynamoDB.BatchWriteItem
    prefix: aws
    constraints:
      - any_of:
        - [ aws.table_names, aws.consumed_capacity, aws.item_collection_metrics ]

  - id: dynamodb.createtable
    brief: DynamoDB.CreateTable
    prefix: aws
    attributes:
      - id: global_secondary_indexes
        type: string[]
        brief: "The JSON-serialized value of each item of the`GlobalSecondaryIndexes` request field"
        examples:
          - '{
              "IndexName": "string",
              "KeySchema": [
                {
                  "AttributeName": "string",
                  "KeyType": "string"
                }
              ],
              "Projection": {
                "NonKeyAttributes": [ "string" ],
                "ProjectionType": "string"
              },
              "ProvisionedThroughput": {
                "ReadCapacityUnits": number,
                "WriteCapacityUnits": number
              }
            }'
      - id: local_secondary_indexes
        type: string[]
        brief: "The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field."
        examples:
          - '{
              "IndexArn": "string",
              "IndexName": "string",
              "IndexSizeBytes": number,
              "ItemCount": number,
              "KeySchema": [
                {
                  "AttributeName": "string",
                  "KeyType": "string"
                }
              ],
              "Projection": {
                "NonKeyAttributes": [ "string" ],
                "ProjectionType": "string"
              }
            }'
    constraints:
      - any_of:
        - [ db.name, aws.consumed_capacity, aws.item_collection_metrics, aws.provisioned_throughput.read_capacity_units, aws.provisioned_throughput.write_capacity_units ]

  - id: dynamodb.deleteitem
    brief: DynamoDB.DeleteItem
    prefix: aws
    constraints:
      - any_of:
        - [ db.name, aws.consumed_capacity, aws.item_collection_metrics ]

  - id: dynamodb.deletetable
    brief: DynamoDB.DeleteTable
    prefix: aws
    constraints:
      - any_of:
        - [ db.name ]

  - id: dynamodb.describetable
    brief: DynamoDB.DescribeTable
    prefix: aws
    constraints:
      - any_of:
        - [ db.name ]

  - id: dynamodb.getitem
    brief: DynamoDB.GetItem
    prefix: aws
    constraints:
      - any_of:
        - [ db.name, aws.consumed_capacity, aws.consistent_read, aws.projection_expression ]

  - id: dynamodb.listtables
    brief: DynamoDB.ListTables
    prefix: aws
    attributes:
      - id: exclusive_start_table_name
        type: string
        brief: "The value of the `ExclusiveStartTableName` request parameter."
        examples:
          - Users
          - CatsTable
      - id: table_count
        type: number
        brief: "The the number of items in the `TableNames` response parameter."
        examples:
          - 20
    constraints:
      - any_of:
        - [ aws.limit ]

  - id: dynamodb.putitem
    brief: DynamoDB.PutItem
    prefix: aws
    constraints:
      - any_of:
        - [ db.name, aws.consumed_capacity, aws.item_collection_metrics ]

  - id: dynamodb.query
    brief: DynamoDB.Query
    prefix: aws
    attributes:
      - id: scan_index_forward
        type: boolean
        brief: "The value of the `ScanIndexForward` request parameter."
    constraints:
      - any_of:
        - [ db.name, aws.consumed_capacity, aws.consistent_read, aws.limit, aws.projection_expression, aws.attributes_to_get, aws.index_name, aws.select ]

  - id: dynamodb.scan
    brief: DynamoDB.Scan
    prefix: aws
    attributes:
      - id: segment
        type: number
        brief: "The value of the `Segment` request parameter."
        examples:
          - 10
      - id: total_segments
        type: number
        brief: "The value of the `TotalSegments` request parameter."
        examples:
          - 100
      - id: count
        type: number
        brief: "The value of the `Count` response parameter."
        examples:
          - 10
      - id: scanned_count
        type: number
        brief: "The value of the `ScannedCount` response parameter."
        examples:
          - 50
    constraints:
      - any_of:
        - [ db.name, aws.consumed_capacity, aws.consistent_read, aws.limit, aws.projection_expression, aws.attributes_to_get, aws.index_name, aws.select ]

  - id: dynamodb.updateitem
    brief: DynamoDB.UpdateItem
    prefix: aws
    constraints:
      - any_of:
        - [ db.name, aws.consumed_capacity, aws.item_collection_metrics ]

  - id: dynamodb.updatetable
    brief: DynamoDB.UpdateTable
    prefix: aws
    attributes:
      - id: attribute_definitions
        type: string[]
        brief: "The JSON-serialized value of each item in the `AttributeDefinitions` request field."
        examples:
          - '{
              "AttributeName": "string",
              "AttributeType": "string"
             }'
      - id: global_secondary_index_updates
        type: string[]
        brief: "The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field."
        examples:
          - '{
              "Create": {
                "IndexName": "string",
                "KeySchema": [
                  {
                    "AttributeName": "string",
                    "KeyType": "string"
                  }
                ],
                "Projection": {
                  "NonKeyAttributes": [ "string" ],
                  "ProjectionType": "string"
                },
                "ProvisionedThroughput": {
                  "ReadCapacityUnits": number,
                  "WriteCapacityUnits": number
                }
              }'
    constraints:
      - any_of:
        - [ db.name, aws.consumed_capacity, aws.provisioned_throughput.read_capacity_units, aws.provisioned_throughput.write_capacity_units ]
